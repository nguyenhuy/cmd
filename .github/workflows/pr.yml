name: Integration tests

on:
  pull_request:
    branches: [ "main" ]
concurrency:
  group: integration-tests-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}
jobs:
  build-release-app:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./local-server/.nvmrc"
    - uses: gsabran/setup-swift@main
      with:
        swift-version: "6.2"
        soft-fail-version-check: true
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '26.0'
    - name: Load npm cache
      uses: actions/cache@v4
      with:
        path: local-server/node_modules
        key: ${{ runner.os }}-npm-modules-${{ hashFiles('local-server/yarn.lock') }}
    - name: Install node dependencies
      run: cd local-server && yarn install && yarn build && yarn copy-to-app
    # See https://github.com/actions/runner-images/issues/10722#issuecomment-2387952421
    - uses: extractions/netrc@v1
      with:
        machine: github.com
        username: oauth2
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Load derived data & SPM cache
      uses: actions/cache/restore@v4
      with:
        path:
          app/build/derived_data
          app/modules/.build
          ~/Library/Caches/org.swift.swiftpm
          ~/Library/org.swift.swiftpm
          ~/Library/Developer/Xcode/DerivedData/**/SourcePackages/
        key: ${{ runner.os }}-app-derived-data-main
    - name: Install fastlane dependencies
      run: |
        cd app/fastlane && gem install bundler && bundle install
    - name: Build app in Release mode
      run: cd app/fastlane && bundle exec fastlane mac build_release
      env:
        FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60
        FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 10
        MATCH_PASSWORD: ${{ secrets.FASTLANE_MACH_PASSWORD }}
        FASTLANE_MACH_REPO_GITHUB_ACCESS_TOKEN: ${{ secrets.FASTLANE_MACH_REPO_GITHUB_ACCESS_TOKEN }}
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}

  test-swift:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: gsabran/setup-swift@main
      with:
        swift-version: "6.2"
        soft-fail-version-check: true
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '26.0'
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./local-server/.nvmrc"
    - name: Load npm cache
      uses: actions/cache@v4
      with:
        path: local-server/node_modules
        key: ${{ runner.os }}-npm-modules-${{ hashFiles('local-server/yarn.lock') }}
    - name: Install dependencies
      run: cd local-server && yarn install && yarn build && yarn copy-to-app
    - name: Load SPM cache
      uses: actions/cache@v4
      with:
        path:
          app/modules/.build
          ~/Library/Caches/org.swift.swiftpm
          ~/Library/org.swift.swiftpm
          ~/Library/Developer/Xcode/DerivedData/**/SourcePackages/
        key: ${{ runner.os }}-spm-app-modules-${{ hashFiles('app/modules/Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-app-modules-
    - name: Run tests
      run: ./cmd.sh test:swift

  lint-swift:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install swiftformat
      run: brew install swiftformat
    - name: Run linter
      run: ./cmd.sh lint:swift
    - name: Verify that `cmd lint:swift` did not change outputs (if it did, please re-run it and re-commit!)
      run: git diff --exit-code

  sync-app-dependencies:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: gsabran/setup-swift@main
      with:
        swift-version: "6.2"
        soft-fail-version-check: true
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install swiftformat
      run: brew install swiftformat
    - name: Cache dependencies binary
      uses: actions/cache@v4
      with:
        path: app/tools/dependencies/tmp/bin
        key: ${{ runner.os }}-spm-tools-${{ hashFiles('app/tools/dependencies/**') }}
    - name: Run sync dependencies
      run: ./cmd.sh sync:dependencies
    - name: Verify that `cmd sync:dependencies` did not change outputs (if it did, please re-run it and re-commit!)
      run: git diff --exit-code

  test-node:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./local-server/.nvmrc"
    - name: Load npm cache
      uses: actions/cache@v4
      with:
        path: local-server/node_modules
        key: ${{ runner.os }}-npm-modules-${{ hashFiles('local-server/yarn.lock') }}
    - name: Install dependencies
      run: cd local-server && yarn install
    - name: Run tests
      run: ./cmd.sh test:ts

  tsc:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./local-server/.nvmrc"
    - name: Load npm cache
      uses: actions/cache@v4
      with:
        path: local-server/node_modules
        key: ${{ runner.os }}-npm-modules-${{ hashFiles('local-server/yarn.lock') }}
    - name: Install dependencies
      run: cd local-server && yarn install
    - name: Run tests
      run: cd local-server && yarn tsc

  lint-node:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./local-server/.nvmrc"
    - name: Load npm cache
      uses: actions/cache@v4
      with:
        path: local-server/node_modules
        key: ${{ runner.os }}-npm-modules-${{ hashFiles('local-server/yarn.lock') }}
    - name: Install dependencies
      run: cd local-server && yarn install
    - name: Run linter
      run: ./cmd.sh lint:ts
    - name: Verify that `cmd lint:ts` did not change outputs (if it did, please re-run it and re-commit!)
      run: git diff --exit-code

  lint-shell:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install shfmt
      run: brew install shfmt
    - name: Run linter
      run: ./cmd.sh lint:shell
    - name: Verify that `cmd lint:shell` did not change outputs (if it did, please re-run it and re-commit!)
      run: git diff --exit-code

  lint-ruby:
    runs-on: macos-26
    timeout-minutes: 60
    steps:
    - name: MacOS version
      run: sw_vers
    - uses: actions/checkout@v4
    - name: Install rubocop
      run:
        gem install bundler && bundle install
    - name: Run linter
      run: ./cmd.sh lint:rb
    - name: Verify that `cmd lint:rb` did not change outputs (if it did, please re-run it and re-commit!)
      run: git diff --exit-code
